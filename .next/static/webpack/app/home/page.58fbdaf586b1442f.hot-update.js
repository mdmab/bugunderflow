"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/home/page",{

/***/ "(app-pages-browser)/./app/home/Threads.tsx":
/*!******************************!*\
  !*** ./app/home/Threads.tsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n// async function fetchQuestions() {\n//   // let response = await fetch(\"http://localhost:4000/api/threads/get-all\", {\n//   //   method: \"GET\",\n//   //   mode: \"cors\"\n//   // })  // An array of questions (jsons)\n//   // let r = response.json()\n//   return (await fetch(\"http://0.0.0.0:3000/api/threads/get-all\", {\n//     method: \"GET\",\n//     mode: \"cors\",\n//     headers: {\n//       'Access-Control-Allow-Origin': \"*\"\n//     }\n//   })).json()\n// }\nconst Threads = ()=>{\n    // const questions = await fetchQuestions()\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"http://localhost:4000/api/threads/get-all\", false);\n    xhr.send();\n    // fetch(\"http://localhost:3000/api/threads/get-all\", {\n    //   method: \"GET\",\n    //   mode: \"cors\",\n    //   headers: {\n    //     'Access-Control-Allow-Origin': \"*\"\n    //   }\n    // }).then((res) => {\n    //   res.json().then((questions) => {\n    //     return (\n    //       <div className='flex-col h-[85vh] w-[80vw]'>\n    //         <ScrollArea className='flex-col justify-center h-[85vh] w-[80vw] scroll-area'>\n    //           {\n    //             questions.map((ques: { qid: string, title: string; authorUsername: string; createdAt: string }) =>\n    //               <QuestionCard key={ques.qid}\n    //               qid={ques.qid} question={ques.title}\n    //               user={ques.authorUsername} time={ques.createdAt}\n    //               replyCount=\"100\" upvotes=\"10\" downvotes=\"10\"/>\n    //             )\n    //           }\n    //         </ScrollArea>\n    //       </div>\n    //     )\n    //   })\n    // })\n    // const [questions, setQuestions] = useState([\n    //   {\n    //     qid: \"\",\n    //     title: \"\",\n    //     authorUsername: \"\",\n    //     createdAt: \"\"\n    //   }\n    // ])\n    // return (\n    //   <div className='flex-col h-[85vh] w-[80vw]'>\n    //     <ScrollArea className='flex-col justify-center h-[85vh] w-[80vw] scroll-area'>\n    //       {\n    //         questions.map((ques: { qid: string, title: string; authorUsername: string; createdAt: string }) =>\n    //           <QuestionCard key={ques.qid}\n    //           qid={ques.qid} question={ques.title}\n    //           user={ques.authorUsername} time={ques.createdAt}\n    //           replyCount=\"100\" upvotes=\"10\" downvotes=\"10\"/>\n    //         )\n    //       }\n    //     </ScrollArea>\n    //   </div>\n    // )\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: xhr.status + \"\\n\" + xhr.responseText\n    }, void 0, false);\n};\n_c = Threads;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Threads);\nvar _c;\n$RefreshReg$(_c, \"Threads\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9ob21lL1RocmVhZHMudHN4IiwibWFwcGluZ3MiOiI7Ozs7O0FBRzJEO0FBSTNELG9DQUFvQztBQUNwQyxpRkFBaUY7QUFDakYsd0JBQXdCO0FBQ3hCLHNCQUFzQjtBQUN0Qiw0Q0FBNEM7QUFFNUMsK0JBQStCO0FBQy9CLHFFQUFxRTtBQUNyRSxxQkFBcUI7QUFDckIsb0JBQW9CO0FBQ3BCLGlCQUFpQjtBQUNqQiwyQ0FBMkM7QUFDM0MsUUFBUTtBQUNSLGVBQWU7QUFDZixJQUFJO0FBRUosTUFBTUMsVUFBVTtJQUNkLDJDQUEyQztJQUUzQyxNQUFNQyxNQUFNLElBQUlDO0lBQ2hCRCxJQUFJRSxJQUFJLENBQUMsT0FBTyw2Q0FBNkM7SUFDN0RGLElBQUlHLElBQUk7SUFFUix1REFBdUQ7SUFDdkQsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YseUNBQXlDO0lBQ3pDLE1BQU07SUFDTixxQkFBcUI7SUFDckIscUNBQXFDO0lBQ3JDLGVBQWU7SUFDZixxREFBcUQ7SUFDckQseUZBQXlGO0lBQ3pGLGNBQWM7SUFDZCxpSEFBaUg7SUFDakgsNkNBQTZDO0lBQzdDLHFEQUFxRDtJQUNyRCxpRUFBaUU7SUFDakUsK0RBQStEO0lBQy9ELGdCQUFnQjtJQUNoQixjQUFjO0lBQ2Qsd0JBQXdCO0lBQ3hCLGVBQWU7SUFDZixRQUFRO0lBQ1IsT0FBTztJQUNQLEtBQUs7SUFDTCwrQ0FBK0M7SUFDL0MsTUFBTTtJQUNOLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsMEJBQTBCO0lBQzFCLG9CQUFvQjtJQUNwQixNQUFNO0lBQ04sS0FBSztJQUVMLFdBQVc7SUFDWCxpREFBaUQ7SUFDakQscUZBQXFGO0lBQ3JGLFVBQVU7SUFDViw2R0FBNkc7SUFDN0cseUNBQXlDO0lBQ3pDLGlEQUFpRDtJQUNqRCw2REFBNkQ7SUFDN0QsMkRBQTJEO0lBQzNELFlBQVk7SUFDWixVQUFVO0lBQ1Ysb0JBQW9CO0lBQ3BCLFdBQVc7SUFDWCxJQUFJO0lBQ0oscUJBQ0E7a0JBQ0dILElBQUlJLE1BQU0sR0FBRyxPQUFPSixJQUFJSyxZQUFZOztBQUV6QztLQTFETU47QUE0RE4sK0RBQWVBLE9BQU9BLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2hvbWUvVGhyZWFkcy50c3g/NTUyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgU2Nyb2xsQXJlYSB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9zY3JvbGwtYXJlYSdcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUXVlc3Rpb25DYXJkIGZyb20gJy4vUXVlc3Rpb25DYXJkJ1xuaW1wb3J0IHsgcmVkaXJlY3QgfSBmcm9tICduZXh0L25hdmlnYXRpb24nXG5cbi8vIGFzeW5jIGZ1bmN0aW9uIGZldGNoUXVlc3Rpb25zKCkge1xuLy8gICAvLyBsZXQgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcImh0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9hcGkvdGhyZWFkcy9nZXQtYWxsXCIsIHtcbi8vICAgLy8gICBtZXRob2Q6IFwiR0VUXCIsXG4vLyAgIC8vICAgbW9kZTogXCJjb3JzXCJcbi8vICAgLy8gfSkgIC8vIEFuIGFycmF5IG9mIHF1ZXN0aW9ucyAoanNvbnMpXG5cbi8vICAgLy8gbGV0IHIgPSByZXNwb25zZS5qc29uKClcbi8vICAgcmV0dXJuIChhd2FpdCBmZXRjaChcImh0dHA6Ly8wLjAuMC4wOjMwMDAvYXBpL3RocmVhZHMvZ2V0LWFsbFwiLCB7XG4vLyAgICAgbWV0aG9kOiBcIkdFVFwiLFxuLy8gICAgIG1vZGU6IFwiY29yc1wiLFxuLy8gICAgIGhlYWRlcnM6IHtcbi8vICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiBcIipcIlxuLy8gICAgIH1cbi8vICAgfSkpLmpzb24oKVxuLy8gfVxuXG5jb25zdCBUaHJlYWRzID0gKCkgPT4ge1xuICAvLyBjb25zdCBxdWVzdGlvbnMgPSBhd2FpdCBmZXRjaFF1ZXN0aW9ucygpXG5cbiAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KClcbiAgeGhyLm9wZW4oXCJHRVRcIiwgXCJodHRwOi8vbG9jYWxob3N0OjQwMDAvYXBpL3RocmVhZHMvZ2V0LWFsbFwiLCBmYWxzZSlcbiAgeGhyLnNlbmQoKVxuXG4gIC8vIGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS90aHJlYWRzL2dldC1hbGxcIiwge1xuICAvLyAgIG1ldGhvZDogXCJHRVRcIixcbiAgLy8gICBtb2RlOiBcImNvcnNcIixcbiAgLy8gICBoZWFkZXJzOiB7XG4gIC8vICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogXCIqXCJcbiAgLy8gICB9XG4gIC8vIH0pLnRoZW4oKHJlcykgPT4ge1xuICAvLyAgIHJlcy5qc29uKCkudGhlbigocXVlc3Rpb25zKSA9PiB7XG4gIC8vICAgICByZXR1cm4gKFxuICAvLyAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZmxleC1jb2wgaC1bODV2aF0gdy1bODB2d10nPlxuICAvLyAgICAgICAgIDxTY3JvbGxBcmVhIGNsYXNzTmFtZT0nZmxleC1jb2wganVzdGlmeS1jZW50ZXIgaC1bODV2aF0gdy1bODB2d10gc2Nyb2xsLWFyZWEnPlxuICAvLyAgICAgICAgICAge1xuICAvLyAgICAgICAgICAgICBxdWVzdGlvbnMubWFwKChxdWVzOiB7IHFpZDogc3RyaW5nLCB0aXRsZTogc3RyaW5nOyBhdXRob3JVc2VybmFtZTogc3RyaW5nOyBjcmVhdGVkQXQ6IHN0cmluZyB9KSA9PlxuICAvLyAgICAgICAgICAgICAgIDxRdWVzdGlvbkNhcmQga2V5PXtxdWVzLnFpZH1cbiAgLy8gICAgICAgICAgICAgICBxaWQ9e3F1ZXMucWlkfSBxdWVzdGlvbj17cXVlcy50aXRsZX1cbiAgLy8gICAgICAgICAgICAgICB1c2VyPXtxdWVzLmF1dGhvclVzZXJuYW1lfSB0aW1lPXtxdWVzLmNyZWF0ZWRBdH1cbiAgLy8gICAgICAgICAgICAgICByZXBseUNvdW50PVwiMTAwXCIgdXB2b3Rlcz1cIjEwXCIgZG93bnZvdGVzPVwiMTBcIi8+XG4gIC8vICAgICAgICAgICAgIClcbiAgLy8gICAgICAgICAgIH1cbiAgLy8gICAgICAgICA8L1Njcm9sbEFyZWE+XG4gIC8vICAgICAgIDwvZGl2PlxuICAvLyAgICAgKVxuICAvLyAgIH0pXG4gIC8vIH0pXG4gIC8vIGNvbnN0IFtxdWVzdGlvbnMsIHNldFF1ZXN0aW9uc10gPSB1c2VTdGF0ZShbXG4gIC8vICAge1xuICAvLyAgICAgcWlkOiBcIlwiLFxuICAvLyAgICAgdGl0bGU6IFwiXCIsXG4gIC8vICAgICBhdXRob3JVc2VybmFtZTogXCJcIixcbiAgLy8gICAgIGNyZWF0ZWRBdDogXCJcIlxuICAvLyAgIH1cbiAgLy8gXSlcblxuICAvLyByZXR1cm4gKFxuICAvLyAgIDxkaXYgY2xhc3NOYW1lPSdmbGV4LWNvbCBoLVs4NXZoXSB3LVs4MHZ3XSc+XG4gIC8vICAgICA8U2Nyb2xsQXJlYSBjbGFzc05hbWU9J2ZsZXgtY29sIGp1c3RpZnktY2VudGVyIGgtWzg1dmhdIHctWzgwdnddIHNjcm9sbC1hcmVhJz5cbiAgLy8gICAgICAge1xuICAvLyAgICAgICAgIHF1ZXN0aW9ucy5tYXAoKHF1ZXM6IHsgcWlkOiBzdHJpbmcsIHRpdGxlOiBzdHJpbmc7IGF1dGhvclVzZXJuYW1lOiBzdHJpbmc7IGNyZWF0ZWRBdDogc3RyaW5nIH0pID0+XG4gIC8vICAgICAgICAgICA8UXVlc3Rpb25DYXJkIGtleT17cXVlcy5xaWR9XG4gIC8vICAgICAgICAgICBxaWQ9e3F1ZXMucWlkfSBxdWVzdGlvbj17cXVlcy50aXRsZX1cbiAgLy8gICAgICAgICAgIHVzZXI9e3F1ZXMuYXV0aG9yVXNlcm5hbWV9IHRpbWU9e3F1ZXMuY3JlYXRlZEF0fVxuICAvLyAgICAgICAgICAgcmVwbHlDb3VudD1cIjEwMFwiIHVwdm90ZXM9XCIxMFwiIGRvd252b3Rlcz1cIjEwXCIvPlxuICAvLyAgICAgICAgIClcbiAgLy8gICAgICAgfVxuICAvLyAgICAgPC9TY3JvbGxBcmVhPlxuICAvLyAgIDwvZGl2PlxuICAvLyApXG4gIHJldHVybiAoXG4gIDw+XG4gICAge3hoci5zdGF0dXMgKyBcIlxcblwiICsgeGhyLnJlc3BvbnNlVGV4dH1cbiAgPC8+KVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaHJlYWRzXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJUaHJlYWRzIiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJvcGVuIiwic2VuZCIsInN0YXR1cyIsInJlc3BvbnNlVGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/home/Threads.tsx\n"));

/***/ })

});